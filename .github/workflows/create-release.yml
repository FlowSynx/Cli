name: Build the project, create nuget package, and create release and tag

on:      
  workflow_dispatch:
    inputs:
      rel_version:
        description: 'Release version (examples: 1.9.0-rc.1, 1.9.1)'
        required: true 
        type: string

jobs:
  build:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        os_arch: [x64, arm, arm64]
        include:
          - os: ubuntu-latest
            kind: linux
            title: linux
          - os: windows-latest
            kind: win
            title: windows
          - os: macos-latest
            kind: osx
            title: osx
        exclude:
          - os: windows-latest
            os_arch: arm
          - os: macOS-latest
            os_arch: arm
    runs-on: ${{ matrix.os }}
    env:
       ARCHIVE_OUTDIR: dist/archives

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion
        
    #Install and calculate the new version with GitVersion  
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7
      id: gitversion # step id used as reference for output values
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ inputs.rel_version }}"
    
    #Build/pack the project
    - name: Setup .NET
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 8.0.x

    - name: Publish
      shell: bash
      run: |
          release_name="flowsynx-${{ matrix.title }}-${{ matrix.os_arch }}"
          # mkdir -p ${release_name}
          dotnet publish src/FlowSynx.Cli/FlowSynx.Cli.csproj --configuration Release /property:Version='${{ inputs.rel_version }}' --runtime '${{ matrix.kind }}-${{ matrix.os_arch }}' -o "${{github.workspace}}/$release_name"
          
          mkdir -p "${{github.workspace}}/dist"
          cd "${{github.workspace}}/${release_name}"
          if [ "${{ matrix.kind }}" == "win" ]; then
            7z a -tzip "${{github.workspace}}/dist/${release_name}.zip" *
          else
            tar czvf "${{github.workspace}}/dist/${release_name}.tar.gz" *
          fi
          cd "${{github.workspace}}"

          # Delete output directory
          # rm -r "${{ env.ARCHIVE_OUTDIR }}/$release_name"

    - name: Upload bineries
      uses: actions/upload-artifact@v2
      with:
        name: cli_flowsynx
        path: "${{github.workspace}}/dist"
        
  release:
    runs-on: ubuntu-latest    
    needs: build
    if: github.ref == 'refs/heads/master' # only run job if on the master branch
    env:
      ARTIFACT_DIR: ./release
    steps:  
    #Push NuGet package to GitHub packages
    - name: Download nuget package artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: cli_flowsynx
        path: ${{ env.ARTIFACT_DIR }}
    - name: generate checksum files
      run: cd ${ARTIFACT_DIR} && for i in *; do sha256sum -b $i > "$i.sha256"; done && cd -
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ inputs.rel_version }}
        name: FlowSynx CLI v${{ inputs.rel_version }}
        artifacts: "**/*.*"
        token: ${{ secrets.NUGET_PACKAGE_TOKEN }}
